// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_StudentSystem.Data;

namespace P01_StudentSystem.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    partial class StudentSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsUnicode(true);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Description = "C# OOP Module",
                            EndDate = new DateTime(2019, 11, 9, 21, 24, 38, 327, DateTimeKind.Utc).AddTicks(4960),
                            Name = "C# OOP",
                            Price = 350m,
                            StartDate = new DateTime(2019, 10, 10, 21, 24, 38, 327, DateTimeKind.Utc).AddTicks(5496)
                        },
                        new
                        {
                            CourseId = 2,
                            Description = "C# Advanced Module",
                            EndDate = new DateTime(2019, 11, 9, 21, 24, 38, 327, DateTimeKind.Utc).AddTicks(6624),
                            Name = "C# Advanced",
                            Price = 400m,
                            StartDate = new DateTime(2019, 9, 30, 21, 24, 38, 327, DateTimeKind.Utc).AddTicks(6634)
                        },
                        new
                        {
                            CourseId = 3,
                            Description = "Java Web Module",
                            EndDate = new DateTime(2019, 11, 9, 21, 24, 38, 327, DateTimeKind.Utc).AddTicks(6657),
                            Name = "Java Web",
                            Price = 500m,
                            StartDate = new DateTime(2019, 9, 20, 21, 24, 38, 327, DateTimeKind.Utc).AddTicks(6658)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsUnicode(false);

                    b.Property<int>("ContentType");

                    b.Property<int>("CourseId");

                    b.Property<int>("StudentId");

                    b.Property<DateTime>("SubmissionTime");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeworkSubmissions");

                    b.HasData(
                        new
                        {
                            HomeworkId = 1,
                            Content = "Some content here",
                            ContentType = 1,
                            CourseId = 1,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2019, 11, 9, 21, 24, 38, 326, DateTimeKind.Utc).AddTicks(6970)
                        },
                        new
                        {
                            HomeworkId = 2,
                            Content = "Some content here 2",
                            ContentType = 2,
                            CourseId = 2,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2019, 11, 9, 21, 24, 38, 326, DateTimeKind.Utc).AddTicks(7544)
                        },
                        new
                        {
                            HomeworkId = 3,
                            Content = "Some content here 3",
                            ContentType = 3,
                            CourseId = 2,
                            StudentId = 2,
                            SubmissionTime = new DateTime(2019, 11, 9, 21, 24, 38, 326, DateTimeKind.Utc).AddTicks(7555)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<int>("ResourceType");

                    b.Property<string>("Url")
                        .IsUnicode(false);

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ResourceId = 1,
                            CourseId = 1,
                            Name = "SoftUni",
                            ResourceType = 3,
                            Url = "softuni.bg"
                        },
                        new
                        {
                            ResourceId = 2,
                            CourseId = 2,
                            Name = "Telerik Academy",
                            ResourceType = 1,
                            Url = "telerik.bg"
                        },
                        new
                        {
                            ResourceId = 3,
                            CourseId = 3,
                            Name = "Tech world",
                            ResourceType = 2,
                            Url = "techworld.com"
                        },
                        new
                        {
                            ResourceId = 4,
                            CourseId = 2,
                            Name = "Tech world and future technologies",
                            ResourceType = 4,
                            Url = "techworldfuturetechnologies.com"
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("char(10)")
                        .IsUnicode(false);

                    b.Property<DateTime>("RegisteredOn");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Birthday = new DateTime(2019, 11, 9, 21, 24, 38, 324, DateTimeKind.Utc).AddTicks(3831),
                            Name = "Pesho",
                            PhoneNumber = "0884034665",
                            RegisteredOn = new DateTime(2019, 10, 30, 21, 24, 38, 324, DateTimeKind.Utc).AddTicks(7398)
                        },
                        new
                        {
                            StudentId = 2,
                            Birthday = new DateTime(2019, 4, 23, 21, 24, 38, 324, DateTimeKind.Utc).AddTicks(8424),
                            Name = "Kiril",
                            PhoneNumber = "0884034667",
                            RegisteredOn = new DateTime(2019, 8, 1, 21, 24, 38, 324, DateTimeKind.Utc).AddTicks(8458)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("CourseId");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 2
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Homework", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P01_StudentSystem.Data.Models.Student", "Student")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Resource", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("StudentsEnrolled")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P01_StudentSystem.Data.Models.Student", "Student")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
